<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Coding之旅 • Posts by &#34;java&#34; tag</title>
        <link>http://example.com</link>
        <description>JAVA</description>
        <language>zh-CN</language>
        <pubDate>Thu, 06 Mar 2025 10:09:08 +0800</pubDate>
        <lastBuildDate>Thu, 06 Mar 2025 10:09:08 +0800</lastBuildDate>
        <category>java</category>
        <category>优化</category>
        <category>Markdown</category>
        <category>字符串</category>
        <category>mybatis-plus</category>
        <category>java面试题</category>
        <category>踩坑</category>
        <category>软件</category>
        <category>app</category>
        <item>
            <guid isPermalink="true">http://example.com/2025/03/06/%E8%B8%A9%E5%9D%91/</guid>
            <title>踩坑</title>
            <link>http://example.com/2025/03/06/%E8%B8%A9%E5%9D%91/</link>
            <category>java</category>
            <category>踩坑</category>
            <pubDate>Thu, 06 Mar 2025 10:09:08 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;1. 忘记读到 buf 数组。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;byte&lt;/span&gt;[] buf = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((len = inputStream.read(buf)) != -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  out.write(buf, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2. 压缩包下载确保流的关闭，否则压缩包无法打开。&lt;br&gt;
3. 输出流可以 flush 刷新一下，确保文件全部写入。&lt;br&gt;
4.Integer 在 controller 能接受 Long 数，但在 mapper 查询出问题。&lt;br&gt;
5. 用 Map 接收 requestBody 时，若 Map 的值为 String，传过来的参数要带上双引号 &amp;quot;&amp;quot;。&lt;br&gt;
6. 当前端既可以传 Integer 又可以传 Long，后端用 Long 接收。但当传 Integer 时，报错 Integer 转 Long 出问题。（解决：toString 后用 Long.valueOf）&lt;br&gt;
7. 文件下载出现文件名为 response.bin，因为：中文名没有编码。&lt;br&gt;
为什么压缩文件的时候没有指定编码，没有出现这个问题？&lt;br&gt;
8.postman 传 json 空格不同问题。&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0dkZWVyL2FydGljbGUvZGV0YWlscy8xMDEwNjE2MTY=&#34;&gt;空格、NBSP 造成的 JSON 解析失败问题&lt;/span&gt;&lt;br&gt;
 9. 带多层目录的 zip 下载没出现文件名重复的错误（之前实现最简单的多个文件压缩成一个压缩包，文件名重复报错）&lt;br&gt;
10.springboot 的参数校验 validate，PathVariable 的 required=true 校验可能先于 @Notnull？&lt;br&gt;
11. 用来校验路径参数不能为空，否则不填路径参数直接到其他的请求返回 404 了： &lt;code&gt;@GetMapping(value = &amp;#123;&amp;quot;/userList/&amp;#123;subscriber&amp;#125;&amp;quot;, &amp;quot;/userList&amp;quot;&amp;#125;)&lt;/code&gt; &lt;br&gt;
 12.requestbod 定义的对象含有 Map&amp;lt;String, Object&amp;gt;。对象对应的类需要有无参构造和全参构造器。&lt;br&gt;
13. &lt;code&gt;String.chatAt()&lt;/code&gt;  获得的是一个 char 字符，可以直接用 int 表示，但为 ascill 码。&lt;br&gt;
14.CMS 垃圾回收器，第 4 个阶段并发清理，和用户线程并发执行，这时用户线程不会&lt;br&gt;
 15.（疑问）尚硅谷 jvm2020 版 P198，视频说 jdk7 的 eden 区放不下，gc 后再将新对象放 eden 区；而 jdk8 是直接放 old 区。但我实践后 jdk8 和 jdk7 行为是一样的：都是直接放 eden 区。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2025/03/05/%E6%B3%A8%E8%A7%A3Builder%E8%B8%A9%E5%9D%91/</guid>
            <title>注解Builder踩坑</title>
            <link>http://example.com/2025/03/05/%E6%B3%A8%E8%A7%A3Builder%E8%B8%A9%E5%9D%91/</link>
            <category>java</category>
            <pubDate>Wed, 05 Mar 2025 19:22:38 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JlbG9uZ3RvY29kZS9hcnRpY2xlL2RldGFpbHMvMTA5NTgzMDUz&#34;&gt;Lombok 的 @Builder 注解带来的两大坑&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2025/03/03/mybatis-plus%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E5%AD%97%E6%AE%B5%E4%B8%BAis-active/</guid>
            <title>mybatis-plus逻辑删除字段为is_active</title>
            <link>http://example.com/2025/03/03/mybatis-plus%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E5%AD%97%E6%AE%B5%E4%B8%BAis-active/</link>
            <category>java</category>
            <category>mybatis-plus</category>
            <pubDate>Mon, 03 Mar 2025 21:40:28 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;全局配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#全局配置&#34;&gt;#&lt;/a&gt; 全局配置&lt;/h1&gt;
&lt;p&gt;在  &lt;code&gt;application.yml&lt;/code&gt;  中配置逻辑删除字段及其值：&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;mybatis-plus:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;global-config:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;db-config:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;logic-delete-field:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;is_active&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 指定逻辑删除字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;logic-delete-value:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;comment&#34;&gt;# 已删除的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;logic-not-delete-value:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;      &lt;span class=&#34;comment&#34;&gt;# 未删除的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;实体类注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实体类注解&#34;&gt;#&lt;/a&gt; 实体类注解&lt;/h1&gt;
&lt;p&gt;在实体类中，使用  &lt;code&gt;@TableLogic&lt;/code&gt;  注解标记 i &lt;code&gt;s_active&lt;/code&gt;  字段：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; com.baomidou.mybatisplus.annotation.TableLogic;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;YourEntity&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 其他字段...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@TableLogic(value = &amp;quot;1&amp;quot;, delval = &amp;quot;0&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Integer isActive;  &lt;span class=&#34;comment&#34;&gt;// 对应数据库中的 is_active 字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value = &amp;quot;1&amp;quot;&lt;/code&gt;  表示未删除时的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delval = &amp;quot;0&amp;quot;&lt;/code&gt;  表示已删除时的值。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2025/03/01/java%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/</guid>
            <title>java代码优化</title>
            <link>http://example.com/2025/03/01/java%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/</link>
            <category>java</category>
            <category>优化</category>
            <category>字符串</category>
            <pubDate>Sat, 01 Mar 2025 10:05:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;字符串优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串优化&#34;&gt;#&lt;/a&gt; 字符串优化&lt;/h1&gt;
&lt;p&gt;1. 针对于 final 修饰类、方法、基本数据类型、引用数据类型的量的结构时，能使用上 final 的时候建议使用上。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;字符串拼接操作不一定使用的是 StringBuilder!&lt;br&gt;
 如果拼接符号左右两边都是字符串常量或常量引用，则仍然使用编译期优化，即非 StringBuilder 的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.StringBuilder 的 append () 的方式：自始至终中只创建过一个 StringBuilder 的对象&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 String 的字符串拼接方式：创建过多个 StringBuilder 和 String 的对象&lt;br&gt;
使用 String 的字符串拼接方式：内存中由于创建了较多的 StringBuilder 和 String 的对象，内存占用更大；如果进行 GC，需要花费额外的时间。&lt;br&gt;
体会执行效率：通过 StringBuilder 的 append () 的方式添加字符串的效率要远高于使用 String 的字符串拼接方式！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3. 改进的空间：在实际开发中，如果基本确定要前前后后添加的字符串长度不高于某个限定值 highLevel 的情况下，建议使用构造器实例化：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;StringBuilder&lt;/span&gt;(highLevel);&lt;span class=&#34;comment&#34;&gt;//new char[highLevel]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4. &lt;code&gt;int&lt;/code&gt;  类型的自增，字节码指令只需要一条，其余的（double）需要额外压入 1 再相加。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
